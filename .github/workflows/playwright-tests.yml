name: Playwright tests
'on':
    workflow_dispatch: null
    schedule:
      - cron: '0 22 * * 1-5'

jobs:
  install:
    name: Install    
    runs-on: ubuntu-latest 
    timeout-minutes: 60 
    steps:
      - name: Checkout Repository
        id: checkout-repository
        uses: actions/checkout@v4
      - name: Setup Node
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
          key: modules-${{ hashFiles('package-lock.json') }}  
      - name: Cache Playwright Binaries
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('package-lock.json') }}         
      - name: Install dependencies
        id: install-dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Install Playwright Browsers
        id: install-playwright-browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
  test:   
    name: Test 
    runs-on: ubuntu-latest
    needs: [install]
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]  

    steps:
      - name: Checkout Repository
        id: checkout-repository
        uses: actions/checkout@v4
      - name: Setup Node
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Cache Playwright Binaries
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('package-lock.json') }}
      - name: Install Playwright System Dependencies
        id: install-playwright-system-dependencies
        run: npx playwright install-deps
      - name: Run Playwright Tests
        id: run-playwright-tests 
        run: npx playwright test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}        
      - name: Upload Playwright Blob Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-blob-report-${{ matrix.shardIndex }}_${{ matrix.shardTotal }}
          path: playwright-blob-report/
          if-no-files-found: ignore
          retention-days: 1 
      - name: Upload Playwright Allure Results
        id: upload-playwright-allure-results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results-${{ matrix.shardIndex }}_${{ matrix.shardTotal }}
          path: allure-results/
          if-no-files-found: ignore
          retention-days: 1  
      - name: Upload Test Results
        id: upload-test-results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.shardIndex }}_${{ matrix.shardTotal }}
          path: test-results/
          if-no-files-found: ignore
          retention-days: 1
      - name: Upload Monocart Report
        id: upload-monocart-report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: monocart-report-${{ matrix.shardIndex }}_${{ matrix.shardTotal }}
          path: playwright-monocart-report/
          if-no-files-found: ignore
          retention-days: 1    
  report:
      name: Merge and Publish Reports
      if: ${{ always() }}
      runs-on: ubuntu-latest
      needs: [test]
      timeout-minutes: 30 
      permissions:
        contents: read
        pages: write
        id-token: write
      concurrency:
        group: 'pages'
        cancel-in-progress: true
      environment:
          name: github-pages
          url: ${{ steps.deployment.outputs.page_url }}     
      steps:
        - name: Checkout Repository
          id: checkout-repository
          uses: actions/checkout@v4
        - name: Setup Node
          id: setup-node
          uses: actions/setup-node@v4
          with:
           node-version: 20 
        - name: Cache Node Modules
          id: cache-node-modules
          uses: actions/cache@v4
          with:
           path: |
            node_modules
           key: modules-${{ hashFiles('package-lock.json') }}
        - name: Cache Playwright Binaries
          id: cache-playwright
          uses: actions/cache@v4
          with:
           path: |
            ~/.cache/ms-playwright
           key: playwright-${{ hashFiles('package-lock.json') }} 
        - name: Download Playwright Blob Reports
          uses: actions/download-artifact@v4
          with:
           path: playwright-all-blob-reports
           pattern: playwright-blob-report-*
           merge-multiple: true
        - name: Merge Playwright HTML Reports
          run: npx playwright merge-reports --reporter html ./playwright-all-blob-reports   
        - name: Download Allure Results
          id: download-allure-results
          uses: actions/download-artifact@v4
          with:
           path: allure-results
           pattern: allure-results-*
           merge-multiple: true        
        - name: Download previous trend data
          run: |
           curl --create-dirs -o ./allure-results/history/history.json https://vladislavanovakovic.github.io/restful-booker-tests/allure/history/history-trend.json
           curl --create-dirs -o ./allure-results/history/duration-trend.json https://vladislavanovakovic.github.io/restful-booker-tests/allure/history/duration-trend.json
           curl --create-dirs -o ./allure-results/history/history-trend.json https://vladislavanovakovic.github.io/restful-booker-tests/allure/history/history-trend.json
           curl --create-dirs -o ./allure-results/history/categories-trend https://vladislavanovakovic.github.io/restful-booker-tests/allure/history/history.json
           curl --create-dirs -o ./allure-results/history/retry-trend.json https://vladislavanovakovic.github.io/restful-booker-tests/allure/history/retry-trend.json
        - name: Install dependencies
          run: npm install -g allure-commandline
        - name: Generate Allure Report
          id: generate-allure-report
          run: |   
           npx allure generate allure-results -o allure-report --clean
        - name: Download Monocart Reports
          id: download-monocart-reports
          uses: actions/download-artifact@v4
          with:          
           pattern: monocart-report-*    
        - name: Download Test Results
          id: download-test-results
          uses: actions/download-artifact@v4
          with:
            path: merged-monocart-report/data
            pattern: test-results-*
            merge-multiple: true
        - name: Merge Playwright Monocart Reports
          id: merge-playwright-monocart-reports
          run: |
           curl -o previous-trend.json https://vladislavanovakovic.github.io/restful-booker-tests/monocart/index.json 
           npm run merge:report:monocart         
        - name: Move to Reports folder
          id: move-to-reports-folder
          run: |
           mv playwright-report reports/playwright
           mv allure-report reports/allure
           mv merged-monocart-report reports/monocart
          shell: bash        
        - name: Setup Pages
          uses: actions/configure-pages@v4
        - name: Upload Artifact
          uses: actions/upload-pages-artifact@v3
          with:
           path: reports/       
        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v4
        - name: Delete Unnecessary Artifacts
          id: delete-unnecessary-artifacts
          uses: geekyeggo/delete-artifact@v4
          with:
           name: |
            playwright-blob-report-*
            test-results-*
            monocart-report-*
            allure-results-*
           failOnError: false

