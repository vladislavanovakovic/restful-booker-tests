name: Tests sharding
'on':
#  push:
#    branches:
#      - main
  workflow_dispatch: null
jobs:
  install:
    name: Install    
    runs-on: ubuntu-latest 
    timeout-minutes: 60 
    steps:
      - name: Checkout Repository
        id: checkout-repository
        uses: actions/checkout@v4
      - name: Setup Node
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
          key: modules-${{ hashFiles('package-lock.json') }}  
      - name: Cache Playwright Binaries
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('package-lock.json') }}         
      - name: Install dependencies
        id: install-dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Install Playwright Browsers
        id: install-playwright-browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
  test:   
    name: Test 
    runs-on: ubuntu-latest
    needs: [install]
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]  

    steps:
      - name: Checkout Repository
        id: checkout-repository
        uses: actions/checkout@v4
      - name: Setup Node
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Cache Playwright Binaries
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('package-lock.json') }}
      - name: Install Playwright System Dependencies
        id: install-playwright-system-dependencies
        run: npx playwright install-deps
      - name: Run Playwright Tests
        id: run-playwright-tests 
        run: npx playwright test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}        
      - name: Upload Playwright Blob Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-blob-report-${{ matrix.shardIndex }}_${{ matrix.shardTotal }}
          path: playwright-blob-report/
          if-no-files-found: ignore
          retention-days: 1 
      - name: Upload Playwright Allure Results
        id: upload-playwright-allure-results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results-${{ matrix.shardIndex }}_${{ matrix.shardTotal }}
          path: allure-results/
          if-no-files-found: ignore
          retention-days: 1      
  report:
      name: Merge and Publish Reports
      if: ${{ always() }}
      runs-on: ubuntu-latest
      needs: [test]
      timeout-minutes: 30 
      permissions:
        contents: read
        pages: write
        id-token: write
      concurrency:
        group: 'pages'
        cancel-in-progress: true
      environment:
          name: github-pages
          url: ${{ steps.deployment.outputs.page_url }}     
      steps:
        - name: Checkout Repository
          id: checkout-repository
          uses: actions/checkout@v4
        - name: Setup Node
          id: setup-node
          uses: actions/setup-node@v4
          with:
           node-version: 20 
        - name: Cache Node Modules
          id: cache-node-modules
          uses: actions/cache@v4
          with:
           path: |
            node_modules
           key: modules-${{ hashFiles('package-lock.json') }}
        - name: Cache Playwright Binaries
          id: cache-playwright
          uses: actions/cache@v4
          with:
           path: |
            ~/.cache/ms-playwright
           key: playwright-${{ hashFiles('package-lock.json') }} 
        - name: Download Playwright Blob Reports
          uses: actions/download-artifact@v4
          with:
           path: playwright-all-blob-reports
           pattern: playwright-blob-report-*
           merge-multiple: true
        - name: Merge Playwright HTML Reports
          run: npx playwright merge-reports --reporter html ./playwright-all-blob-reports   
        - name: Download Allure Results
          id: download-allure-results
          uses: actions/download-artifact@v4
          with:
           path: allure-results
           pattern: allure-results-*
           merge-multiple: true
        - name: Install dependencies
          run: npm install -g allure-commandline
        - name: Download previous trend data
          run: |
           curl --create-dirs -o ./playwright-allure-results/history/history-trend.json https://vladislavanovakovic.github.io/restful-booker-tests/allure/history/history-trend.json
        - name: Generate Allure Report
          id: generate-allure-report
          run: |   
           npx allure generate allure-results -o playwright-allure-report --clean
        - name: Move to Reports folder
          id: move-to-reports-folder
          run: |
           mv playwright-report reports/playwright
           mv playwright-allure-report reports/allure
          shell: bash
        - name: Setup Pages
          uses: actions/configure-pages@v4
        - name: Upload Artifact
          uses: actions/upload-pages-artifact@v3
          with:
           path: reports/
        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v4
        #- name: Upload HTML report
        #  uses: actions/upload-artifact@v4
        #  with:
        #    name: html-report
        #    path: playwright-report
        #    retention-days: 1
